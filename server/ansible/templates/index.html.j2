<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Create Nextcloud Project</title>
    <style>
        :root {
            --primary: #2563eb;
            --success: #22c55e;
            --error: #ef4444;
            --text: #1e293b;
            --bg: #f8fafc;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', system-ui, sans-serif;
        }

        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 2rem;
            background-color: var(--bg);
            color: var(--text);
        }

        #createProjectForm {
            background: white;
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 480px;
            transition: transform 0.2s ease;
        }

        #createProjectForm:hover {
            transform: translateY(-2px);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            font-size: 0.9rem;
            color: #64748b;
        }

        input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 0.5rem;
            font-size: 1rem;
            transition: border-color 0.2s ease;
        }

        input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        input:read-only {
            background: #f1f5f9;
            cursor: not-allowed;
        }

        button[type="submit"] {
            width: 100%;
            padding: 1rem;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        button[type="submit"]:hover {
            background: #1d4ed8;
        }

        button[type="submit"]:disabled {
            background: #94a3b8;
            cursor: not-allowed;
            opacity: 0.7;
        }

        button[type="submit"]:disabled:hover {
            background: #94a3b8;
        }

        .form-info {
            margin-top: 1.5rem;
            text-align: center;
            font-size: 0.875rem;
            color: #64748b;
            line-height: 1.5;
        }

        #result {
            width: 100%;
            max-width: 480px;
            margin-top: 2rem;
            padding: 1.5rem;
            border-radius: 0.5rem;
            font-size: 0.9rem;
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease;
        }

        #result.visible {
            opacity: 1;
            transform: translateY(0);
        }

        #result.progress {
            background: #dbeafe;
            color: #1e40af;
        }

        #result.success {
            background: #dcfce7;
            color: #166534;
        }

        #result.error {
            background: #fee2e2;
            color: #991b1b;
        }

        @media (max-width: 640px) {
            body {
                padding: 1rem;
            }

            #createProjectForm {
                padding: 1.5rem;
            }
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .spinner {
            display: inline-block;
            width: 1rem;
            height: 1rem;
            border: 2px solid currentColor;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 0.8s linear infinite;
            margin-right: 0.5rem;
            vertical-align: middle;
        }

        .project-link {
            color: #2563eb;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.2s ease;
            border-bottom: 2px solid transparent;
        }

        .project-link:hover {
            color: #1d4ed8;
            border-bottom-color: currentColor;
        }

        .additional-info {
            margin-top: 1rem;
            padding: 0.75rem;
            background: #ffffff;
            border-radius: 0.5rem;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <form id="createProjectForm">
        <div class="form-group">
            <label for="project_name">Project name</label>
            <input 
                type="text" 
                name="project_name" 
                placeholder="my-project" 
                required
            >
        </div>

        <div class="form-group">
            <label for="email">E-mail</label>
            <input 
                type="email" 
                name="email" 
                placeholder="user@example.com" 
                required
            >
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <input 
                type="password" 
                name="password" 
                placeholder="••••••••" 
                required
            >
        </div>

        <button type="submit">Create Project</button>
        <p class="form-info">
            The specified e-mail and password will be used to access your Nextcloud instance.
        </p>
    </form>

    <div id="result"></div>

    <script>
        document.getElementById('createProjectForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const resultDiv = document.getElementById('result');
            const submitBtn = document.querySelector('button[type="submit"]');

            submitBtn.disabled = true;
            submitBtn.innerHTML = 'Creating...';

            const inputs = document.getElementById('createProjectForm').querySelectorAll('input');
            inputs.forEach(input => input.readOnly = true);

            resultDiv.className = 'visible progress';
            resultDiv.innerHTML = `
                <span class="spinner"></span>
                Creating project. This may take a while...
            `;

            const formData = new FormData(e.target);
            const requestData = {
                project_name: formData.get('project_name'),
                email: formData.get('email'),
                password: formData.get('password')
            };

            try {
                const response = await fetch('/api.php', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify(requestData)
                });
                
                const result = await response.json();
                
                resultDiv.className = response.ok 
                    ? 'visible success' 
                    : 'visible error';
                
                if (response.ok) {
                    const link = `https://${result.project}.${result.domain}`;
                    resultDiv.innerHTML = 
                        `✅ ${result.message}: 
                        <a href="${link}" 
                        target="_blank" 
                        rel="noopener noreferrer" 
                        class="project-link">
                            ${result.project}.${result.domain}
                        </a>
                        <div class="additional-info">
                            Check your email <b>${requestData.email}</b> for additional information.
                        </div>`;
                } else {
                    resultDiv.innerHTML = `❌ ${result.message}`;
                }


            } catch (error) {
                resultDiv.className = 'visible error';
                resultDiv.innerHTML = `❌ Error: ${error.message}`;
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = 'Create Project';
                inputs.forEach(input => input.readOnly = false);
            }
        });
    </script>
</body>
</html>
