- name: Nextcloud
  hosts: nextcloud-server
  vars:
    email: ""
    password: ""
    domain: "{{ hostvars[inventory_hostname].user_project_domain }}"
    db_user: "dbuser"
    db_password: "dbpassword"
    db_name: "dbnextcloud"

  tasks:
    - name: Timezone settings
      become: true
      community.general.timezone:
        name: Europe/Moscow

    - name: Upgrade Software
      become: true
      ansible.builtin.apt:
        update_cache: true
        upgrade: yes

    - name: Install packages
      become: true
      ansible.builtin.apt:
        pkg:
          - acl
          - apache2
          - bzip2
          - certbot
          - libapache2-mod-php
          - php-curl
          - php-gd
          - php-json
          - php-mbstring
          - php-xml
          - php-pgsql
          - php-zip
          - postgresql-all
          - python3-certbot-apache
          - python3-psycopg2
          - unzip
        state: present

    - name: Download and unpack Nextcloud
      become: true
      ansible.builtin.unarchive:
        src: "https://download.nextcloud.com/server/releases/latest.tar.bz2"
        dest: "/var/www/html"
        remote_src: yes
        owner: "www-data"
        group: "www-data"
        extra_opts: ["--strip-components=1"]
        creates: "/var/www/html/index.php"

    - name: Create Apache config
      become: true
      ansible.builtin.template:
        src: "nextcloud.conf.j2"
        dest: "/etc/apache2/sites-available/nextcloud.conf"
      notify: Restart Apache

    - name: Enable Apache modules
      become: true
      ansible.builtin.command:
        cmd: "a2enmod {{ item }}"
      loop:
        - rewrite
        - headers
        - env
        - dir
        - mime

    - name: Enable site
      become: true
      ansible.builtin.command:
        cmd: "a2ensite nextcloud.conf"
        cmd: "a2enmod php8.3"
      notify: Restart Apache

    - name: Create PostgreSQL user
      become: true
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"

    - name: Create PostgreSQL database
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        name: "{{ db_name }}"
        owner: "{{ db_user }}"

    - name: Obtain SSL certificate
      become: true
      command: certbot --apache -d {{ domain }} --non-interactive --agree-tos --email {{ email }}
      args:
        creates: /etc/letsencrypt/live/{{ domain }}/fullchain.pem

    - name: Set directory permissions
      become: true
      ansible.builtin.command:
        cmd: "chown -R www-data:www-data /var/www/html/"

    - name: Configure Nextcloud
      become: true
      shell: |
        sudo -u www-data php /var/www/html/occ maintenance:install \
          --database "pgsql" \
          --database-name "{{ db_name }}" \
          --database-user "{{ db_user }}" \
          --database-pass "{{ db_password }}" \
          --admin-user "{{ email }}" \
          --admin-pass "{{ password }}" \
          --data-dir "/var/www/html/data"

    - name: Set trusted domains
      become: true
      command: sudo -u www-data php /var/www/html/occ config:system:set trusted_domains 1 --value={{ domain }}

  handlers:
    - name: Restart Apache
      become: true
      ansible.builtin.service:
        name: apache2
        state: restarted