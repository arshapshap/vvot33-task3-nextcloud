- name: Server
  hosts: server
  vars_files:
    - smtp-vars.yml
  vars:
    domain: "{{ hostvars[inventory_hostname].domain }}"
    terraform_version: "1.10.5"
    terraform_url: "https://hashicorp-releases.yandexcloud.net/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
    user_home: "/home/ubuntu"
    project_expiration_time_mins: "30"

  tasks:
    - name: Timezone settings
      become: true
      community.general.timezone:
        name: Europe/Moscow

    - name: Upgrade Software
      become: true
      ansible.builtin.apt:
        update_cache: true
        upgrade: yes

    - name: Install packages
      become: true
      ansible.builtin.apt:
        pkg:
          - acl
          - apache2
          - at
          - certbot
          - python3-certbot-apache
          - php
          - php-cli
          - php-mbstring
          - php-xml
        state: present

    - name: Download Composer installer
      become: true
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php
        mode: '0755'

    - name: Install Composer globally
      become: true
      command: >
        php /tmp/composer-setup.php
        --install-dir=/usr/local/bin
        --filename=composer

    - name: Prepare Composer environment
      become: true
      block:
        - name: Create Composer home directory
          file:
            path: /var/www/.composer
            state: directory
            owner: www-data
            group: www-data
            mode: '0755'

        - name: Set web directory permissions
          file:
            path: /var/www/html
            owner: www-data
            group: www-data
            recurse: yes
            mode: '0755'

    - name: Install PHPMailer via Composer
      become: true
      command: >
        /usr/local/bin/composer require phpmailer/phpmailer
        --working-dir=/var/www/html
        --no-interaction
        --no-progress
        --no-scripts
      environment:
        COMPOSER_HOME: /var/www/.composer
        COMPOSER_CACHE_DIR: /var/www/.composer/cache
      args:
        chdir: /var/www/html
        creates: /var/www/html/vendor/phpmailer/phpmailer

    - name: Deploy HTML index
      become: true
      ansible.builtin.template:
        src: index.html.j2
        dest: /var/www/html/index.html
        mode: '0644'
        owner: www-data
        group: www-data

    - name: Deploy API handler
      become: true
      ansible.builtin.template:
        src: api-handler.php.j2
        dest: /var/www/html/api.php
        mode: '0644'
        owner: www-data
        group: www-data

    - name: Allow www-data to use at command
      become: true
      copy:
        dest: "/etc/sudoers.d/www-data-at"
        content: |
          www-data ALL=(ALL) NOPASSWD: /usr/bin/at
        owner: root
        group: root
        mode: '0440'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Ensure atd service is running
      become: true
      ansible.builtin.service:
        name: atd
        state: started
        enabled: yes

    - name: Create temporary HTTP config
      become: true
      template:
        src: server-http.conf.j2
        dest: /etc/apache2/sites-available/server.conf

    - name: Enable Apache SSL module
      become: true
      command: a2enmod ssl

    - name: Obtain SSL certificate
      become: true
      command: certbot --apache -d {{ domain }} --non-interactive --agree-tos --email {{ email }}

    - name: Apply final HTTPS config
      become: true
      template:
        src: server-https.conf.j2
        dest: /etc/apache2/sites-available/server.conf
      notify: Restart Apache

    - name: Set X permission for user directory
      become: true
      file:
        path: "{{ user_home }}"
        mode: '0755'
        owner: ubuntu
        group: www-data

    - name: Set X permission for create_project script
      become: true
      file:
        path: "{{ user_home }}/nextcloud/create_project.sh"
        mode: '0755'
        owner: ubuntu
        group: www-data

    - name: Create sudoers.d directory if not exists
      become: true
      file:
        path: /etc/sudoers.d/
        state: directory
        mode: '0750'
        owner: root
        group: root

    - name: Deploy sudoers rule
      become: true
      copy:
        dest: "/etc/sudoers.d/web-scripts"
        content: |
          www-data ALL=(ubuntu) NOPASSWD: /home/ubuntu/nextcloud/create_project.sh
        owner: root
        group: root
        mode: '0440'
        validate: /usr/sbin/visudo -cf %s

    - name: Install Ansible
      become: true
      apt:
        name: ansible
        state: present
        update_cache: yes

    - name: Install unzip
      become: true
      apt:
        name: unzip
        state: present
        update_cache: yes

    - name: Download Terraform
      become: true
      get_url:
        url: "{{ terraform_url }}"
        dest: "{{ user_home }}/terraform.zip"
        mode: '0755'

    - name: Unzip Terraform
      become: true
      unarchive:
        src: "{{ user_home }}/terraform.zip"
        dest: "{{ user_home }}"
        remote_src: yes
        mode: '0755'

    - name: Configure Terraform mirror
      become: true
      copy:
        dest: "{{ user_home }}/.terraformrc"
        content: |
          provider_installation {
            network_mirror {
              url = "https://terraform-mirror.yandexcloud.net/"
              include = ["registry.terraform.io/*/*"]
            }
            direct {
              exclude = ["registry.terraform.io/*/*"]
            }
          }
        mode: '0644'

    - name: Generate SSH key
      become: true
      become_user: ubuntu
      openssh_keypair:
        path: "{{ user_home }}/.ssh/id_rsa"
        type: rsa
        size: 4096
        force: yes
        comment: "ansible-generated"
      register: sshkey

    - name: Set .ssh permissions
      become: true
      become_user: ubuntu
      file:
        path: "{{ user_home }}/.ssh"
        state: directory
        mode: '0700'
        owner: ubuntu
        group: ubuntu

  handlers:
    - name: Restart Apache
      become: true
      ansible.builtin.service:
        name: apache2
        state: restarted